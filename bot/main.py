import os
import json
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart
from aiogram.enums import ContentType
from aiogram.utils.web_app import WebAppInfo # –î–ª—è WebAppInfo

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
YOUR_TELEGRAM_ID = int(os.getenv('YOUR_TELEGRAM_ID')) # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ int
CHANNEL_ID = os.getenv('CHANNEL_ID') # –°—Ç—Ä–æ–∫–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
MINI_APP_URL = os.getenv('MINI_APP_URL')

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if not TOKEN or not YOUR_TELEGRAM_ID or not CHANNEL_ID or not MINI_APP_URL:
    print("–û—à–∏–±–∫–∞: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ (TELEGRAM_BOT_TOKEN, YOUR_TELEGRAM_ID, CHANNEL_ID, MINI_APP_URL) –∑–∞–¥–∞–Ω—ã –≤ —Ñ–∞–π–ª–µ .env")
    exit()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(CommandStart())
async def cmd_start(message: types.Message):
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Mini App
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=[
        [types.InlineKeyboardButton(text="–ó–∞–ø—É—Å—Ç–∏—Ç—å –ò–ò-–¢–∞—Ä–≥–µ—Ç–æ–ª–æ–≥–∞", web_app=WebAppInfo(url=MINI_APP_URL))]
    ])
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ò–ò-—Ç–∞—Ä–≥–µ—Ç–æ–ª–æ–≥ –¥–ª—è Meta Ads. –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∫–∞–º–ø–∞–Ω–∏–∏:", reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ–±—ã—Ç–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–∞–Ω–∞–ª
# –≠—Ç–æ—Ç –∫–æ–¥ –æ—Å—Ç–∞–µ—Ç—Å—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, –µ—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
@dp.message(content_type=ContentType.NEW_CHAT_MEMBERS)
async def new_member_handler(message: types.Message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–±—ã—Ç–∏–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ –∏–º–µ–Ω–Ω–æ –≤ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ
    if str(message.chat.id) == CHANNEL_ID:
        for user in message.new_chat_members:
            if not user.is_bot: # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–∞–º–æ–≥–æ –±–æ—Ç–∞
                first_name = user.first_name if user.first_name else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"
                last_name = user.last_name if user.last_name else ""
                username = f"@{user.username}" if user.username else "–Ω–µ—Ç —é–∑–µ—Ä–Ω–µ–π–º–∞"

                notification_message = (
                    f"üéâ –ù–æ–≤—ã–π –ø–æ–¥–ø–∏—Å—á–∏–∫ –≤ –∫–∞–Ω–∞–ª–µ!\n"
                    f"–ò–º—è: {first_name} {last_name}\n"
                    f"Username: {username}\n"
                    f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.id}"
                )

                try:
                    await bot.send_message(chat_id=YOUR_TELEGRAM_ID, text=notification_message)
                    print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–µ: {first_name} {last_name}")
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–∏—Ö–æ–¥—è—â–∏—Ö –∏–∑ Mini App
@dp.message(content_type=ContentType.WEB_APP_DATA)
async def web_app_data_handler(message: types.Message):
    # message.web_app_data.data —Å–æ–¥–µ—Ä–∂–∏—Ç JSON-—Å—Ç—Ä–æ–∫—É, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –∏–∑ Mini App
    try:
        data = json.loads(message.web_app_data.data)

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Mini App
        request_type = data.get('type', 'unknown')
        product_name = data.get('product_name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
        campaign_goal = data.get('campaign_goal', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')
        target_audience_description = data.get('target_audience_description', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
        budget = data.get('budget', '–ù–µ —É–∫–∞–∑–∞–Ω')
        timestamp = data.get('timestamp', 'N/A')

        # –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–±–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.
        # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –≤—ã–∑–æ–≤–∞ –ò–ò-–º–æ–¥–µ–ª–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.
        response_message = (
            f"üìä –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –∏–∑ Mini App:\n"
            f"–¢–∏–ø –∑–∞–ø—Ä–æ—Å–∞: {request_type}\n"
            f"–ü—Ä–æ–¥—É–∫—Ç: {product_name}\n"
            f"–¶–µ–ª—å –∫–∞–º–ø–∞–Ω–∏–∏: {campaign_goal}\n"
            f"–û–ø–∏—Å–∞–Ω–∏–µ –¶–ê: {target_audience_description}\n"
            f"–ë—é–¥–∂–µ—Ç: {budget} USD\n"
            f"–í—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞: {timestamp}\n\n"
            f"‚ú® (–ó–¥–µ—Å—å –ò–ò —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ç–∞—Ä–≥–µ—Ç–∏–Ω–≥—É, –∫—Ä–µ–∞—Ç–∏–≤–∞–º, –±—é–¥–∂–µ—Ç—É –∏ —É–ª—É—á—à–µ–Ω–∏—é.)"
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–±–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        await bot.send_message(chat_id=YOUR_TELEGRAM_ID, text=response_message)
        await message.answer("–í–∞—à –∑–∞–ø—Ä–æ—Å –ø–æ–ª—É—á–µ–Ω! –ò–ò-—Ç–∞—Ä–≥–µ—Ç–æ–ª–æ–≥ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ —Å–∫–æ—Ä–æ –ø—Ä–∏—à–ª–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.")
        print(f"–ü–æ–ª—É—á–µ–Ω—ã –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ Mini App: {data}")

    except json.JSONDecodeError:
        await message.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Mini App: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON.")
        print(f"–û—à–∏–±–∫–∞ JSON –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Mini App: {message.web_app_data.data}")
    except Exception as e:
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Mini App.")
        print(f"–û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Mini App: {e}, –¥–∞–Ω–Ω—ã–µ: {message.web_app_data.data}")


async def main():
    print("–ò–ò-–¢–∞—Ä–≥–µ—Ç–æ–ª–æ–≥ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞—é —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Mini App...")
    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –≤—Ö–æ–¥—è—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    await dp.start_polling(bot)

if __name__ == '__main__':
    import asyncio
    asyncio.run(main())