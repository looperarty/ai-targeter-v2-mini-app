import os
import json
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart
from aiogram.enums import ContentType
from aiogram.utils.web_app import WebAppInfo # –î–ª—è WebAppInfo

# –ò–º–ø–æ—Ä—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Google Gemini API
import google.generativeai as genai

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
YOUR_TELEGRAM_ID = int(os.getenv('YOUR_TELEGRAM_ID'))
GOOGLE_GEMINI_API_KEY = os.getenv('GOOGLE_GEMINI_API_KEY')
MINI_APP_URL = os.getenv('MINI_APP_URL')

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
if not TOKEN or not YOUR_TELEGRAM_ID or not GOOGLE_GEMINI_API_KEY or not MINI_APP_URL:
    print("–û—à–∏–±–∫–∞: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ (TELEGRAM_BOT_TOKEN, YOUR_TELEGRAM_ID, GOOGLE_GEMINI_API_KEY, MINI_APP_URL) –∑–∞–¥–∞–Ω—ã –≤ —Ñ–∞–π–ª–µ .env")
    exit()

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä—É–µ–º Google Gemini API
genai.configure(api_key=GOOGLE_GEMINI_API_KEY)
# –í—ã–±–∏—Ä–∞–µ–º –º–æ–¥–µ–ª—å Gemini, –∫–æ—Ç–æ—Ä—É—é –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
# 'gemini-pro' —Ö–æ—Ä–æ—à–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∑–∞–¥–∞—á
model = genai.GenerativeModel('gemini-pro')


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(CommandStart())
async def cmd_start(message: types.Message):
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=[
        [types.InlineKeyboardButton(text="–ó–∞–ø—É—Å—Ç–∏—Ç—å –ò–ò-–¢–∞—Ä–≥–µ—Ç–æ–ª–æ–≥–∞", web_app=WebAppInfo(url=MINI_APP_URL))]
    ])
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ò–ò-—Ç–∞—Ä–≥–µ—Ç–æ–ª–æ–≥ –¥–ª—è Meta Ads. –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∫–∞–º–ø–∞–Ω–∏–∏:", reply_markup=keyboard)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∞–Ω–Ω—ã—Ö, –ø—Ä–∏—Ö–æ–¥—è—â–∏—Ö –∏–∑ Mini App
@dp.message(content_type=ContentType.WEB_APP_DATA)
async def web_app_data_handler(message: types.Message):
    try:
        data = json.loads(message.web_app_data.data)

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Mini App
        request_type = data.get('type', 'campaign_analysis') # –£ –Ω–∞—Å –ø–æ–∫–∞ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ç–∏–ø, –Ω–æ –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
        product_name = data.get('product_name', '–Ω–µ —É–∫–∞–∑–∞–Ω')
        campaign_goal = data.get('campaign_goal', '–Ω–µ —É–∫–∞–∑–∞–Ω–∞')
        target_audience_description = data.get('target_audience_description', '–Ω–µ —É–∫–∞–∑–∞–Ω–æ')
        budget = data.get('budget', '–Ω–µ —É–∫–∞–∑–∞–Ω')

        user_input = (
            f"–ú–æ–π –ø—Ä–æ–¥—É–∫—Ç/—É—Å–ª—É–≥–∞: {product_name}. "
            f"–ú–æ—è —Ü–µ–ª—å –∫–∞–º–ø–∞–Ω–∏–∏ –≤ Meta Ads: {campaign_goal}. "
            f"–ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–∞—è —Ü–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è: {target_audience_description}. "
            f"–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –±—é–¥–∂–µ—Ç: {budget} USD.\n\n"
            "–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –¥–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–∫–ª–∞–º–Ω–æ–π –∫–∞–º–ø–∞–Ω–∏–∏ –≤ Meta Ads (Facebook/Instagram), "
            "–≤–∫–ª—é—á–∞—è:\n"
            "1. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ü–µ–ª–µ–≤–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏ (–¥–µ–º–æ–≥—Ä–∞—Ñ–∏—è, –∏–Ω—Ç–µ—Ä–µ—Å—ã, –ø–æ–≤–µ–¥–µ–Ω–∏–µ) —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏.\n"
            "2. 3-5 –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤/–∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø–ª–µ–π—Å–º–µ–Ω—Ç–æ–≤ Meta Ads.\n"
            "3. –ò–¥–µ–∏ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö –∫—Ä–µ–∞—Ç–∏–≤–æ–≤.\n"
            "4. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –±—é–¥–∂–µ—Ç–∞ –∏ —Å—Ç–∞–≤–æ–∫.\n"
            "–û—Ç–≤–µ—á–∞–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ."
        )

        await bot.send_message(chat_id=YOUR_TELEGRAM_ID, text="‚öôÔ∏è –ò–ò-—Ç–∞—Ä–≥–µ—Ç–æ–ª–æ–≥ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–∞—à –∑–∞–ø—Ä–æ—Å. –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ –º–∏–Ω—É—Ç—ã...")
        await message.answer("–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ò–ò-–º–æ–¥–µ–ª–∏. –û–∂–∏–¥–∞–π—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö.")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ Gemini API
        response = await model.generate_content_async(user_input)

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –æ—Ç –ò–ò
        gemini_response_text = response.text if response.text else "–ò–ò –Ω–µ —Å–º–æ–≥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –∑–∞–ø—Ä–æ—Å."

        final_message = (
            f"‚ú® **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ò–ò-—Ç–∞—Ä–≥–µ—Ç–æ–ª–æ–≥–∞ –¥–ª—è Meta Ads:**\n\n"
            f"{gemini_response_text}\n\n"
            f"--- \n–í–∞—à –∑–∞–ø—Ä–æ—Å –±—ã–ª:\n–ü—Ä–æ–¥—É–∫—Ç: {product_name}\n–¶–µ–ª—å: {campaign_goal}\n"
            f"–û–ø–∏—Å–∞–Ω–∏–µ –¶–ê: {target_audience_description}\n–ë—é–¥–∂–µ—Ç: {budget} USD"
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–±–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        await bot.send_message(chat_id=YOUR_TELEGRAM_ID, text=final_message, parse_mode='Markdown')
        print(f"–ü–æ–ª—É—á–µ–Ω—ã –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ Mini App, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: {data}")

    except json.JSONDecodeError:
        await bot.send_message(chat_id=YOUR_TELEGRAM_ID, text="üö´ –û—à–∏–±–∫–∞: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ Mini App.")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        print(f"–û—à–∏–±–∫–∞ JSON –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Mini App: {message.web_app_data.data}")
    except Exception as e:
        await bot.send_message(chat_id=YOUR_TELEGRAM_ID, text=f"üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –ò–ò: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –æ—Ç –ò–ò. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        print(f"–û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Mini App –∏–ª–∏ –≤—ã–∑–æ–≤–µ –ò–ò: {e}, –¥–∞–Ω–Ω—ã–µ: {message.web_app_data.data}")


async def main():
    print("–ò–ò-–¢–∞—Ä–≥–µ—Ç–æ–ª–æ–≥ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞—é —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Mini App...")
    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –≤—Ö–æ–¥—è—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    await dp.start_polling(bot)

if __name__ == '__main__':
    import asyncio
    asyncio.run(main())